apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
    type: RollingUpdate
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      appsel: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        appsel: {{ .Release.Name }}
    spec:
      {{ if .Values.vault.k8s_auth }}
      serviceAccountName: {{ .Values.vault.serviceaccount }}
      {{ end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      imagePullSecrets:
        - name: "{{ .Values.image.pullSecrets }}"
      volumes:
      - name: docker-engine
        emptyDir: {}
      - name: docker-data
      {{ if eq .Values.ramdisk.enabled true }}
        emptyDir:
          medium: Memory
          sizeLimit: {{ .Values.ramdisk.size }}
      {{ else }}
        emptyDir: {}
      {{ end }}
      containers:
      - name: docker
        image: docker:17.06.1-ce-dind
        imagePullPolicy: Always
        args:
          - --storage-driver=overlay2
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-engine
          mountPath: /var/run
        - name: docker-data
          mountPath: /var/lib/docker
        resources:
{{ toYaml .Values.docker_resources | indent 10 }}
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - /go/bin/furan
        {{ if eq .Values.vault.useTokenAuth true }}
          - -k
        {{ end }}
        {{ if eq .Values.db.initialize true }}
          - -i
        {{ end }}
        {{ if eq .Values.db.useConsulDiscovery true }}
          - -z
        {{ else }}
          - -n
          - {{ .Values.db.nodes }}
        {{ end }}
          - -f
          - {{ .Values.kafkaBrokers }}
        {{ if .Values.vault.prefix}}
          - -x
          - {{ .Values.vault.prefix }}
        {{ end }}
        {{ if eq .Values.vault.useK8sAuth true }}
          - '--vault-k8s-jwt-path'
          - /var/run/secrets/kubernetes.io/serviceaccount/token
          - '--vault-k8s-role'
          - '{{ .Values.vault.role }}'
          - '--vault-k8s-auth-path'
          - '{{ .Values.vault.authPath }}'
        {{ end }}
          - server
          - --log-to-sumo=false
        {{ if .Values.s3_error_log_bucket }}
          - --s3-error-logs
          - --s3-error-log-bucket
          - {{ .Values.s3_error_log_bucket }}
        {{ end }}
          - --docker-storage-path
          - /opt/docker-storage
        {{ if .Values.datadog.statsdAddr }}
          - --dogstatsd-addr={{ .Values.datadog.statsdAddr }}
        {{ end }}
        {{ if .Values.datadog.overrideDefaultTags }}
          - --default-metrics-tags={{ .Values.datadog.overrideDefaultTags }}
        {{ end }}
        {{ if .Values.datadog.tracingAgentAddr }}
          - --datadog-tracing-agent-addr={{ .Values.datadog.tracingAgentAddr }}
        {{ end }}
        {{ if .Values.datadog.serviceName }}
          - --datadog-service-name={{ .Values.datadog.serviceName }}
        {{ end }}
          - --consul-addr={{ .Values.consulAddr }}
        env:
        - name: DOCKER_HOST
          value: unix:///var/run/docker.sock
        - name: VAULT_ADDR
          value: {{ .Values.vault.addr }}
      {{ if eq .Values.vault.useTokenAuth true }}
        - name: VAULT_TOKEN
          value: {{ .Values.vault.token }}
      {{ end }}
        - name: CONSUL_HTTP_ADDR
          value: {{ .Values.consulAddr }}
        ports:
        - containerPort: {{ .Values.furaninterface.service.httpInternalPort }}
        - containerPort: {{ .Values.furaninterface.service.grpcInternalPort }}
        - containerPort: {{ .Values.furaninterface.service.httpHealthcheckPort }}
        - containerPort: {{ .Values.furaninterface.service.performanceProfilingPort }}
        volumeMounts:
        - name: docker-engine
          mountPath: /var/run
        livenessProbe:
          initialDelaySeconds: 100
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          httpGet:
            path: {{ .Values.furaninterface.service.httpHealthcheckPath }}
            port: {{ .Values.furaninterface.service.httpHealthcheckPort }}
        readinessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 2
          successThreshold: 1
          failureThreshold: 1
          httpGet:
            path: {{ .Values.furaninterface.service.httpHealthcheckPath }}
            port: {{ .Values.furaninterface.service.httpHealthcheckPort }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
