apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kafka.fullname" . }}
  labels:
    app: {{ template "kafka.name" . }}
    chart: {{ template "kafka.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ template "kafka.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "kafka.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: kafka
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://$(POD_IP):{{ .Values.service.externalPort }}"
        {{ if .Values.env_name }}
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "furan-{{ .Values.zookeeper.service.name }}:{{ .Values.zookeeper.service.externalPort }}"
        {{ else }}
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "{{ .Values.zookeeper.service.name }}:{{ .Values.zookeeper.service.externalPort }}"
        {{ end }}
        # This is needed when you are running with a single-node cluster.
        {{ if eq .Values.app.replicas 1.0 }}
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        {{ end }}
        ports:
          - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{  .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          tcpSocket:
            port: {{ .Values.service.internalPort }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{  .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          tcpSocket:
            port: {{ .Values.service.internalPort }}
